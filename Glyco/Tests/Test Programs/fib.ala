(
	locals: ,
	in: do(
		pushScope(analysisAtEntry: (conflicts: (), possiblyLiveLocations: ))
		set(register(a0), to: constant(0), analysisAtEntry: (conflicts: (), possiblyLiveLocations: ))
		set(register(a1), to: constant(1), analysisAtEntry: (conflicts: (), possiblyLiveLocations: register(a0)))
		set(
			register(a2),
			to: constant(30),
			analysisAtEntry: (conflicts: (), possiblyLiveLocations: register(a0) register(a1))
		)
		do(, analysisAtEntry: (conflicts: (), possiblyLiveLocations: register(a0) register(a1) register(a2)))
		do(, analysisAtEntry: (conflicts: (), possiblyLiveLocations: register(a0) register(a1) register(a2)))
		do(, analysisAtEntry: (conflicts: (), possiblyLiveLocations: register(a0) register(a1) register(a2)))
		call(
			fib,
			parameters: a0 a1 a2,
			analysisAtEntry: (conflicts: (), possiblyLiveLocations: register(a0) register(a1) register(a2))
		)
		do(, analysisAtEntry: (conflicts: (), possiblyLiveLocations: register(a0)))
		do(, analysisAtEntry: (conflicts: (), possiblyLiveLocations: register(a0)))
		popScope(analysisAtEntry: (conflicts: (), possiblyLiveLocations: register(a0)))
		return(analysisAtEntry: (conflicts: (), possiblyLiveLocations: register(a0))),
		analysisAtEntry: (conflicts: (), possiblyLiveLocations: )
	),
	procedures: (
		fib,
		locals: abstract(df.result$1, s32)
		abstract(df.result$2, s32)
		abstract(ls.arg0, s32)
		abstract(ls.arg1, s32)
		abstract(ls.arg2, s32)
		abstract(ls.curr, s32)
		abstract(ls.iter, s32)
		abstract(ls.lhs, s32)
		abstract(ls.lhs$1, s32)
		abstract(ls.lhs$2, s32)
		abstract(ls.prev, s32)
		abstract(ls.rhs, s32)
		abstract(ls.rhs$1, s32)
		abstract(ls.rhs$2, s32),
		in: do(
			pushScope(
				analysisAtEntry: (
					conflicts: (
						(abstract(ls.arg0), abstract(ls.arg1))
						(abstract(ls.arg0), abstract(ls.arg2))
						(abstract(ls.arg0), abstract(ls.curr))
						(abstract(ls.arg0), abstract(ls.iter))
						(abstract(ls.arg0), abstract(ls.lhs$1))
						(abstract(ls.arg0), abstract(ls.lhs$2))
						(abstract(ls.arg0), abstract(ls.prev))
						(abstract(ls.arg0), abstract(ls.rhs$1))
						(abstract(ls.arg0), abstract(ls.rhs$2))
						(abstract(ls.arg1), abstract(ls.arg2))
						(abstract(ls.arg1), abstract(ls.iter))
						(abstract(ls.arg1), abstract(ls.lhs$2))
						(abstract(ls.arg1), abstract(ls.rhs$2))
						(abstract(ls.arg1), register(a0))
						(abstract(ls.arg2), register(a0))
						(abstract(ls.arg2), register(a1))
						(abstract(ls.curr), abstract(ls.iter))
						(abstract(ls.curr), abstract(ls.lhs))
						(abstract(ls.curr), abstract(ls.lhs$1))
						(abstract(ls.curr), abstract(ls.prev))
						(abstract(ls.curr), abstract(ls.rhs))
						(abstract(ls.curr), register(a2))
						(abstract(ls.iter), abstract(ls.lhs))
						(abstract(ls.iter), abstract(ls.lhs$1))
						(abstract(ls.iter), abstract(ls.prev))
						(abstract(ls.iter), abstract(ls.rhs))
						(abstract(ls.iter), abstract(ls.rhs$1))
						(abstract(ls.lhs), abstract(ls.prev))
						(abstract(ls.lhs), abstract(ls.rhs))
						(abstract(ls.lhs$1), abstract(ls.rhs$1))
						(abstract(ls.lhs$2), abstract(ls.rhs$2))
						(abstract(ls.prev), abstract(ls.rhs))
						(abstract(ls.prev), register(a1))
						(abstract(ls.prev), register(a2))
					),
					possiblyLiveLocations: register(a0) register(a1) register(a2)
				)
			)
			set(
				abstract(ls.prev),
				to: register(a0, s32),
				analysisAtEntry: (
					conflicts: (
						(abstract(ls.arg0), abstract(ls.arg1))
						(abstract(ls.arg0), abstract(ls.arg2))
						(abstract(ls.arg0), abstract(ls.curr))
						(abstract(ls.arg0), abstract(ls.iter))
						(abstract(ls.arg0), abstract(ls.lhs$1))
						(abstract(ls.arg0), abstract(ls.lhs$2))
						(abstract(ls.arg0), abstract(ls.prev))
						(abstract(ls.arg0), abstract(ls.rhs$1))
						(abstract(ls.arg0), abstract(ls.rhs$2))
						(abstract(ls.arg1), abstract(ls.arg2))
						(abstract(ls.arg1), abstract(ls.iter))
						(abstract(ls.arg1), abstract(ls.lhs$2))
						(abstract(ls.arg1), abstract(ls.rhs$2))
						(abstract(ls.arg1), register(a0))
						(abstract(ls.arg2), register(a0))
						(abstract(ls.arg2), register(a1))
						(abstract(ls.curr), abstract(ls.iter))
						(abstract(ls.curr), abstract(ls.lhs))
						(abstract(ls.curr), abstract(ls.lhs$1))
						(abstract(ls.curr), abstract(ls.prev))
						(abstract(ls.curr), abstract(ls.rhs))
						(abstract(ls.curr), register(a2))
						(abstract(ls.iter), abstract(ls.lhs))
						(abstract(ls.iter), abstract(ls.lhs$1))
						(abstract(ls.iter), abstract(ls.prev))
						(abstract(ls.iter), abstract(ls.rhs))
						(abstract(ls.iter), abstract(ls.rhs$1))
						(abstract(ls.lhs), abstract(ls.prev))
						(abstract(ls.lhs), abstract(ls.rhs))
						(abstract(ls.lhs$1), abstract(ls.rhs$1))
						(abstract(ls.lhs$2), abstract(ls.rhs$2))
						(abstract(ls.prev), abstract(ls.rhs))
						(abstract(ls.prev), register(a1))
						(abstract(ls.prev), register(a2))
					),
					possiblyLiveLocations: register(a0) register(a1) register(a2)
				)
			)
			set(
				abstract(ls.curr),
				to: register(a1, s32),
				analysisAtEntry: (
					conflicts: (
						(abstract(ls.arg0), abstract(ls.arg1))
						(abstract(ls.arg0), abstract(ls.arg2))
						(abstract(ls.arg0), abstract(ls.curr))
						(abstract(ls.arg0), abstract(ls.iter))
						(abstract(ls.arg0), abstract(ls.lhs$1))
						(abstract(ls.arg0), abstract(ls.lhs$2))
						(abstract(ls.arg0), abstract(ls.prev))
						(abstract(ls.arg0), abstract(ls.rhs$1))
						(abstract(ls.arg0), abstract(ls.rhs$2))
						(abstract(ls.arg1), abstract(ls.arg2))
						(abstract(ls.arg1), abstract(ls.iter))
						(abstract(ls.arg1), abstract(ls.lhs$2))
						(abstract(ls.arg1), abstract(ls.rhs$2))
						(abstract(ls.arg1), register(a0))
						(abstract(ls.arg2), register(a0))
						(abstract(ls.arg2), register(a1))
						(abstract(ls.curr), abstract(ls.iter))
						(abstract(ls.curr), abstract(ls.lhs))
						(abstract(ls.curr), abstract(ls.lhs$1))
						(abstract(ls.curr), abstract(ls.prev))
						(abstract(ls.curr), abstract(ls.rhs))
						(abstract(ls.curr), register(a2))
						(abstract(ls.iter), abstract(ls.lhs))
						(abstract(ls.iter), abstract(ls.lhs$1))
						(abstract(ls.iter), abstract(ls.prev))
						(abstract(ls.iter), abstract(ls.rhs))
						(abstract(ls.iter), abstract(ls.rhs$1))
						(abstract(ls.lhs), abstract(ls.prev))
						(abstract(ls.lhs), abstract(ls.rhs))
						(abstract(ls.lhs$1), abstract(ls.rhs$1))
						(abstract(ls.lhs$2), abstract(ls.rhs$2))
						(abstract(ls.prev), abstract(ls.rhs))
					),
					possiblyLiveLocations: abstract(ls.prev) register(a1) register(a2)
				)
			)
			set(
				abstract(ls.iter),
				to: register(a2, s32),
				analysisAtEntry: (
					conflicts: (
						(abstract(ls.arg0), abstract(ls.arg1))
						(abstract(ls.arg0), abstract(ls.arg2))
						(abstract(ls.arg0), abstract(ls.curr))
						(abstract(ls.arg0), abstract(ls.iter))
						(abstract(ls.arg0), abstract(ls.lhs$1))
						(abstract(ls.arg0), abstract(ls.lhs$2))
						(abstract(ls.arg0), abstract(ls.prev))
						(abstract(ls.arg0), abstract(ls.rhs$1))
						(abstract(ls.arg0), abstract(ls.rhs$2))
						(abstract(ls.arg1), abstract(ls.arg2))
						(abstract(ls.arg1), abstract(ls.iter))
						(abstract(ls.arg1), abstract(ls.lhs$2))
						(abstract(ls.arg1), abstract(ls.rhs$2))
						(abstract(ls.arg1), register(a0))
						(abstract(ls.arg2), register(a0))
						(abstract(ls.arg2), register(a1))
						(abstract(ls.curr), abstract(ls.iter))
						(abstract(ls.curr), abstract(ls.lhs))
						(abstract(ls.curr), abstract(ls.lhs$1))
						(abstract(ls.curr), abstract(ls.rhs))
						(abstract(ls.iter), abstract(ls.lhs))
						(abstract(ls.iter), abstract(ls.lhs$1))
						(abstract(ls.iter), abstract(ls.prev))
						(abstract(ls.iter), abstract(ls.rhs))
						(abstract(ls.iter), abstract(ls.rhs$1))
						(abstract(ls.lhs), abstract(ls.prev))
						(abstract(ls.lhs), abstract(ls.rhs))
						(abstract(ls.lhs$1), abstract(ls.rhs$1))
						(abstract(ls.lhs$2), abstract(ls.rhs$2))
						(abstract(ls.prev), abstract(ls.rhs))
					),
					possiblyLiveLocations: abstract(ls.curr) abstract(ls.prev) register(a2)
				)
			)
			if(
				do(
					set(
						abstract(ls.lhs),
						to: abstract(ls.iter),
						analysisAtEntry: (
							conflicts: (
								(abstract(ls.arg0), abstract(ls.arg1))
								(abstract(ls.arg0), abstract(ls.arg2))
								(abstract(ls.arg0), abstract(ls.curr))
								(abstract(ls.arg0), abstract(ls.iter))
								(abstract(ls.arg0), abstract(ls.lhs$1))
								(abstract(ls.arg0), abstract(ls.lhs$2))
								(abstract(ls.arg0), abstract(ls.prev))
								(abstract(ls.arg0), abstract(ls.rhs$1))
								(abstract(ls.arg0), abstract(ls.rhs$2))
								(abstract(ls.arg1), abstract(ls.arg2))
								(abstract(ls.arg1), abstract(ls.iter))
								(abstract(ls.arg1), abstract(ls.lhs$2))
								(abstract(ls.arg1), abstract(ls.rhs$2))
								(abstract(ls.arg1), register(a0))
								(abstract(ls.arg2), register(a0))
								(abstract(ls.arg2), register(a1))
								(abstract(ls.curr), abstract(ls.lhs))
								(abstract(ls.curr), abstract(ls.lhs$1))
								(abstract(ls.curr), abstract(ls.rhs))
								(abstract(ls.iter), abstract(ls.lhs))
								(abstract(ls.iter), abstract(ls.lhs$1))
								(abstract(ls.iter), abstract(ls.rhs))
								(abstract(ls.iter), abstract(ls.rhs$1))
								(abstract(ls.lhs), abstract(ls.prev))
								(abstract(ls.lhs), abstract(ls.rhs))
								(abstract(ls.lhs$1), abstract(ls.rhs$1))
								(abstract(ls.lhs$2), abstract(ls.rhs$2))
								(abstract(ls.prev), abstract(ls.rhs))
							),
							possiblyLiveLocations: abstract(ls.curr) abstract(ls.iter) abstract(ls.prev)
						)
					)
					set(
						abstract(ls.rhs),
						to: constant(0),
						analysisAtEntry: (
							conflicts: (
								(abstract(ls.arg0), abstract(ls.arg1))
								(abstract(ls.arg0), abstract(ls.arg2))
								(abstract(ls.arg0), abstract(ls.curr))
								(abstract(ls.arg0), abstract(ls.iter))
								(abstract(ls.arg0), abstract(ls.lhs$1))
								(abstract(ls.arg0), abstract(ls.lhs$2))
								(abstract(ls.arg0), abstract(ls.prev))
								(abstract(ls.arg0), abstract(ls.rhs$1))
								(abstract(ls.arg0), abstract(ls.rhs$2))
								(abstract(ls.arg1), abstract(ls.arg2))
								(abstract(ls.arg1), abstract(ls.iter))
								(abstract(ls.arg1), abstract(ls.lhs$2))
								(abstract(ls.arg1), abstract(ls.rhs$2))
								(abstract(ls.arg1), register(a0))
								(abstract(ls.arg2), register(a0))
								(abstract(ls.arg2), register(a1))
								(abstract(ls.curr), abstract(ls.lhs$1))
								(abstract(ls.curr), abstract(ls.rhs))
								(abstract(ls.iter), abstract(ls.lhs$1))
								(abstract(ls.iter), abstract(ls.rhs))
								(abstract(ls.iter), abstract(ls.rhs$1))
								(abstract(ls.lhs), abstract(ls.rhs))
								(abstract(ls.lhs$1), abstract(ls.rhs$1))
								(abstract(ls.lhs$2), abstract(ls.rhs$2))
								(abstract(ls.prev), abstract(ls.rhs))
							),
							possiblyLiveLocations: abstract(ls.curr) abstract(ls.iter) abstract(ls.lhs) abstract(ls.prev)
						)
					),
					then: relation(
						abstract(ls.lhs),
						le,
						abstract(ls.rhs),
						analysisAtEntry: (
							conflicts: (
								(abstract(ls.arg0), abstract(ls.arg1))
								(abstract(ls.arg0), abstract(ls.arg2))
								(abstract(ls.arg0), abstract(ls.curr))
								(abstract(ls.arg0), abstract(ls.iter))
								(abstract(ls.arg0), abstract(ls.lhs$1))
								(abstract(ls.arg0), abstract(ls.lhs$2))
								(abstract(ls.arg0), abstract(ls.prev))
								(abstract(ls.arg0), abstract(ls.rhs$1))
								(abstract(ls.arg0), abstract(ls.rhs$2))
								(abstract(ls.arg1), abstract(ls.arg2))
								(abstract(ls.arg1), abstract(ls.iter))
								(abstract(ls.arg1), abstract(ls.lhs$2))
								(abstract(ls.arg1), abstract(ls.rhs$2))
								(abstract(ls.arg1), register(a0))
								(abstract(ls.arg2), register(a0))
								(abstract(ls.arg2), register(a1))
								(abstract(ls.curr), abstract(ls.lhs$1))
								(abstract(ls.iter), abstract(ls.lhs$1))
								(abstract(ls.iter), abstract(ls.rhs$1))
								(abstract(ls.lhs$1), abstract(ls.rhs$1))
								(abstract(ls.lhs$2), abstract(ls.rhs$2))
							),
							possiblyLiveLocations: abstract(ls.curr)
							abstract(ls.iter)
							abstract(ls.lhs)
							abstract(ls.prev)
							abstract(ls.rhs)
						)
					),
					analysisAtEntry: (
						conflicts: (
							(abstract(ls.arg0), abstract(ls.arg1))
							(abstract(ls.arg0), abstract(ls.arg2))
							(abstract(ls.arg0), abstract(ls.curr))
							(abstract(ls.arg0), abstract(ls.iter))
							(abstract(ls.arg0), abstract(ls.lhs$1))
							(abstract(ls.arg0), abstract(ls.lhs$2))
							(abstract(ls.arg0), abstract(ls.prev))
							(abstract(ls.arg0), abstract(ls.rhs$1))
							(abstract(ls.arg0), abstract(ls.rhs$2))
							(abstract(ls.arg1), abstract(ls.arg2))
							(abstract(ls.arg1), abstract(ls.iter))
							(abstract(ls.arg1), abstract(ls.lhs$2))
							(abstract(ls.arg1), abstract(ls.rhs$2))
							(abstract(ls.arg1), register(a0))
							(abstract(ls.arg2), register(a0))
							(abstract(ls.arg2), register(a1))
							(abstract(ls.curr), abstract(ls.lhs))
							(abstract(ls.curr), abstract(ls.lhs$1))
							(abstract(ls.curr), abstract(ls.rhs))
							(abstract(ls.iter), abstract(ls.lhs))
							(abstract(ls.iter), abstract(ls.lhs$1))
							(abstract(ls.iter), abstract(ls.rhs))
							(abstract(ls.iter), abstract(ls.rhs$1))
							(abstract(ls.lhs), abstract(ls.prev))
							(abstract(ls.lhs), abstract(ls.rhs))
							(abstract(ls.lhs$1), abstract(ls.rhs$1))
							(abstract(ls.lhs$2), abstract(ls.rhs$2))
							(abstract(ls.prev), abstract(ls.rhs))
						),
						possiblyLiveLocations: abstract(ls.curr) abstract(ls.iter) abstract(ls.prev)
					)
				),
				then: do(
					set(
						abstract(df.result$1),
						to: abstract(ls.curr),
						analysisAtEntry: (conflicts: (), possiblyLiveLocations: abstract(ls.curr))
					)
					set(
						register(a0),
						to: abstract(df.result$1),
						analysisAtEntry: (conflicts: (), possiblyLiveLocations: abstract(df.result$1))
					)
					popScope(analysisAtEntry: (conflicts: (), possiblyLiveLocations: register(a0)))
					return(analysisAtEntry: (conflicts: (), possiblyLiveLocations: register(a0))),
					analysisAtEntry: (conflicts: (), possiblyLiveLocations: abstract(ls.curr))
				),
				else: do(
					set(
						abstract(ls.arg0),
						to: abstract(ls.curr),
						analysisAtEntry: (
							conflicts: (
								(abstract(ls.arg0), abstract(ls.arg1))
								(abstract(ls.arg0), abstract(ls.arg2))
								(abstract(ls.arg0), abstract(ls.curr))
								(abstract(ls.arg0), abstract(ls.iter))
								(abstract(ls.arg0), abstract(ls.lhs$1))
								(abstract(ls.arg0), abstract(ls.lhs$2))
								(abstract(ls.arg0), abstract(ls.prev))
								(abstract(ls.arg0), abstract(ls.rhs$1))
								(abstract(ls.arg0), abstract(ls.rhs$2))
								(abstract(ls.arg1), abstract(ls.arg2))
								(abstract(ls.arg1), abstract(ls.iter))
								(abstract(ls.arg1), abstract(ls.lhs$2))
								(abstract(ls.arg1), abstract(ls.rhs$2))
								(abstract(ls.arg1), register(a0))
								(abstract(ls.arg2), register(a0))
								(abstract(ls.arg2), register(a1))
								(abstract(ls.curr), abstract(ls.lhs$1))
								(abstract(ls.iter), abstract(ls.lhs$1))
								(abstract(ls.iter), abstract(ls.rhs$1))
								(abstract(ls.lhs$1), abstract(ls.rhs$1))
								(abstract(ls.lhs$2), abstract(ls.rhs$2))
							),
							possiblyLiveLocations: abstract(ls.curr) abstract(ls.iter) abstract(ls.prev)
						)
					)
					set(
						abstract(ls.lhs$1),
						to: abstract(ls.prev),
						analysisAtEntry: (
							conflicts: (
								(abstract(ls.arg0), abstract(ls.arg1))
								(abstract(ls.arg0), abstract(ls.arg2))
								(abstract(ls.arg0), abstract(ls.lhs$1))
								(abstract(ls.arg0), abstract(ls.lhs$2))
								(abstract(ls.arg0), abstract(ls.rhs$1))
								(abstract(ls.arg0), abstract(ls.rhs$2))
								(abstract(ls.arg1), abstract(ls.arg2))
								(abstract(ls.arg1), abstract(ls.iter))
								(abstract(ls.arg1), abstract(ls.lhs$2))
								(abstract(ls.arg1), abstract(ls.rhs$2))
								(abstract(ls.arg1), register(a0))
								(abstract(ls.arg2), register(a0))
								(abstract(ls.arg2), register(a1))
								(abstract(ls.curr), abstract(ls.lhs$1))
								(abstract(ls.iter), abstract(ls.lhs$1))
								(abstract(ls.iter), abstract(ls.rhs$1))
								(abstract(ls.lhs$1), abstract(ls.rhs$1))
								(abstract(ls.lhs$2), abstract(ls.rhs$2))
							),
							possiblyLiveLocations: abstract(ls.arg0) abstract(ls.curr) abstract(ls.iter) abstract(ls.prev)
						)
					)
					set(
						abstract(ls.rhs$1),
						to: abstract(ls.curr),
						analysisAtEntry: (
							conflicts: (
								(abstract(ls.arg0), abstract(ls.arg1))
								(abstract(ls.arg0), abstract(ls.arg2))
								(abstract(ls.arg0), abstract(ls.lhs$2))
								(abstract(ls.arg0), abstract(ls.rhs$1))
								(abstract(ls.arg0), abstract(ls.rhs$2))
								(abstract(ls.arg1), abstract(ls.arg2))
								(abstract(ls.arg1), abstract(ls.iter))
								(abstract(ls.arg1), abstract(ls.lhs$2))
								(abstract(ls.arg1), abstract(ls.rhs$2))
								(abstract(ls.arg1), register(a0))
								(abstract(ls.arg2), register(a0))
								(abstract(ls.arg2), register(a1))
								(abstract(ls.iter), abstract(ls.rhs$1))
								(abstract(ls.lhs$1), abstract(ls.rhs$1))
								(abstract(ls.lhs$2), abstract(ls.rhs$2))
							),
							possiblyLiveLocations: abstract(ls.arg0) abstract(ls.curr) abstract(ls.iter) abstract(ls.lhs$1)
						)
					)
					compute(
						abstract(ls.arg1),
						abstract(ls.lhs$1),
						add,
						abstract(ls.rhs$1),
						analysisAtEntry: (
							conflicts: (
								(abstract(ls.arg0), abstract(ls.arg1))
								(abstract(ls.arg0), abstract(ls.arg2))
								(abstract(ls.arg0), abstract(ls.lhs$2))
								(abstract(ls.arg0), abstract(ls.rhs$2))
								(abstract(ls.arg1), abstract(ls.arg2))
								(abstract(ls.arg1), abstract(ls.iter))
								(abstract(ls.arg1), abstract(ls.lhs$2))
								(abstract(ls.arg1), abstract(ls.rhs$2))
								(abstract(ls.arg1), register(a0))
								(abstract(ls.arg2), register(a0))
								(abstract(ls.arg2), register(a1))
								(abstract(ls.lhs$2), abstract(ls.rhs$2))
							),
							possiblyLiveLocations: abstract(ls.arg0) abstract(ls.iter) abstract(ls.lhs$1) abstract(ls.rhs$1)
						)
					)
					set(
						abstract(ls.lhs$2),
						to: abstract(ls.iter),
						analysisAtEntry: (
							conflicts: (
								(abstract(ls.arg0), abstract(ls.arg2))
								(abstract(ls.arg0), abstract(ls.lhs$2))
								(abstract(ls.arg0), abstract(ls.rhs$2))
								(abstract(ls.arg1), abstract(ls.arg2))
								(abstract(ls.arg1), abstract(ls.lhs$2))
								(abstract(ls.arg1), abstract(ls.rhs$2))
								(abstract(ls.arg1), register(a0))
								(abstract(ls.arg2), register(a0))
								(abstract(ls.arg2), register(a1))
								(abstract(ls.lhs$2), abstract(ls.rhs$2))
							),
							possiblyLiveLocations: abstract(ls.arg0) abstract(ls.arg1) abstract(ls.iter)
						)
					)
					set(
						abstract(ls.rhs$2),
						to: constant(1),
						analysisAtEntry: (
							conflicts: (
								(abstract(ls.arg0), abstract(ls.arg2))
								(abstract(ls.arg0), abstract(ls.rhs$2))
								(abstract(ls.arg1), abstract(ls.arg2))
								(abstract(ls.arg1), abstract(ls.rhs$2))
								(abstract(ls.arg1), register(a0))
								(abstract(ls.arg2), register(a0))
								(abstract(ls.arg2), register(a1))
								(abstract(ls.lhs$2), abstract(ls.rhs$2))
							),
							possiblyLiveLocations: abstract(ls.arg0) abstract(ls.arg1) abstract(ls.lhs$2)
						)
					)
					compute(
						abstract(ls.arg2),
						abstract(ls.lhs$2),
						sub,
						abstract(ls.rhs$2),
						analysisAtEntry: (
							conflicts: (
								(abstract(ls.arg0), abstract(ls.arg2))
								(abstract(ls.arg1), abstract(ls.arg2))
								(abstract(ls.arg1), register(a0))
								(abstract(ls.arg2), register(a0))
								(abstract(ls.arg2), register(a1))
							),
							possiblyLiveLocations: abstract(ls.arg0) abstract(ls.arg1) abstract(ls.lhs$2) abstract(ls.rhs$2)
						)
					)
					set(
						register(a0),
						to: abstract(ls.arg0),
						analysisAtEntry: (
							conflicts: (
								(abstract(ls.arg1), register(a0))
								(abstract(ls.arg2), register(a0))
								(abstract(ls.arg2), register(a1))
							),
							possiblyLiveLocations: abstract(ls.arg0) abstract(ls.arg1) abstract(ls.arg2)
						)
					)
					set(
						register(a1),
						to: abstract(ls.arg1),
						analysisAtEntry: (
							conflicts: ((abstract(ls.arg2), register(a1))),
							possiblyLiveLocations: abstract(ls.arg1) abstract(ls.arg2) register(a0)
						)
					)
					set(
						register(a2),
						to: abstract(ls.arg2),
						analysisAtEntry: (conflicts: (), possiblyLiveLocations: abstract(ls.arg2) register(a0) register(a1))
					)
					call(
						fib,
						parameters: a0 a1 a2,
						analysisAtEntry: (conflicts: (), possiblyLiveLocations: register(a0) register(a1) register(a2))
					)
					set(
						abstract(df.result$2),
						to: register(a0, s32),
						analysisAtEntry: (conflicts: (), possiblyLiveLocations: register(a0))
					)
					set(
						register(a0),
						to: abstract(df.result$2),
						analysisAtEntry: (conflicts: (), possiblyLiveLocations: abstract(df.result$2))
					)
					popScope(analysisAtEntry: (conflicts: (), possiblyLiveLocations: register(a0)))
					return(analysisAtEntry: (conflicts: (), possiblyLiveLocations: register(a0))),
					analysisAtEntry: (
						conflicts: (
							(abstract(ls.arg0), abstract(ls.arg1))
							(abstract(ls.arg0), abstract(ls.arg2))
							(abstract(ls.arg0), abstract(ls.curr))
							(abstract(ls.arg0), abstract(ls.iter))
							(abstract(ls.arg0), abstract(ls.lhs$1))
							(abstract(ls.arg0), abstract(ls.lhs$2))
							(abstract(ls.arg0), abstract(ls.prev))
							(abstract(ls.arg0), abstract(ls.rhs$1))
							(abstract(ls.arg0), abstract(ls.rhs$2))
							(abstract(ls.arg1), abstract(ls.arg2))
							(abstract(ls.arg1), abstract(ls.iter))
							(abstract(ls.arg1), abstract(ls.lhs$2))
							(abstract(ls.arg1), abstract(ls.rhs$2))
							(abstract(ls.arg1), register(a0))
							(abstract(ls.arg2), register(a0))
							(abstract(ls.arg2), register(a1))
							(abstract(ls.curr), abstract(ls.lhs$1))
							(abstract(ls.iter), abstract(ls.lhs$1))
							(abstract(ls.iter), abstract(ls.rhs$1))
							(abstract(ls.lhs$1), abstract(ls.rhs$1))
							(abstract(ls.lhs$2), abstract(ls.rhs$2))
						),
						possiblyLiveLocations: abstract(ls.curr) abstract(ls.iter) abstract(ls.prev)
					)
				),
				analysisAtEntry: (
					conflicts: (
						(abstract(ls.arg0), abstract(ls.arg1))
						(abstract(ls.arg0), abstract(ls.arg2))
						(abstract(ls.arg0), abstract(ls.curr))
						(abstract(ls.arg0), abstract(ls.iter))
						(abstract(ls.arg0), abstract(ls.lhs$1))
						(abstract(ls.arg0), abstract(ls.lhs$2))
						(abstract(ls.arg0), abstract(ls.prev))
						(abstract(ls.arg0), abstract(ls.rhs$1))
						(abstract(ls.arg0), abstract(ls.rhs$2))
						(abstract(ls.arg1), abstract(ls.arg2))
						(abstract(ls.arg1), abstract(ls.iter))
						(abstract(ls.arg1), abstract(ls.lhs$2))
						(abstract(ls.arg1), abstract(ls.rhs$2))
						(abstract(ls.arg1), register(a0))
						(abstract(ls.arg2), register(a0))
						(abstract(ls.arg2), register(a1))
						(abstract(ls.curr), abstract(ls.lhs))
						(abstract(ls.curr), abstract(ls.lhs$1))
						(abstract(ls.curr), abstract(ls.rhs))
						(abstract(ls.iter), abstract(ls.lhs))
						(abstract(ls.iter), abstract(ls.lhs$1))
						(abstract(ls.iter), abstract(ls.rhs))
						(abstract(ls.iter), abstract(ls.rhs$1))
						(abstract(ls.lhs), abstract(ls.prev))
						(abstract(ls.lhs), abstract(ls.rhs))
						(abstract(ls.lhs$1), abstract(ls.rhs$1))
						(abstract(ls.lhs$2), abstract(ls.rhs$2))
						(abstract(ls.prev), abstract(ls.rhs))
					),
					possiblyLiveLocations: abstract(ls.curr) abstract(ls.iter) abstract(ls.prev)
				)
			),
			analysisAtEntry: (
				conflicts: (
					(abstract(ls.arg0), abstract(ls.arg1))
					(abstract(ls.arg0), abstract(ls.arg2))
					(abstract(ls.arg0), abstract(ls.curr))
					(abstract(ls.arg0), abstract(ls.iter))
					(abstract(ls.arg0), abstract(ls.lhs$1))
					(abstract(ls.arg0), abstract(ls.lhs$2))
					(abstract(ls.arg0), abstract(ls.prev))
					(abstract(ls.arg0), abstract(ls.rhs$1))
					(abstract(ls.arg0), abstract(ls.rhs$2))
					(abstract(ls.arg1), abstract(ls.arg2))
					(abstract(ls.arg1), abstract(ls.iter))
					(abstract(ls.arg1), abstract(ls.lhs$2))
					(abstract(ls.arg1), abstract(ls.rhs$2))
					(abstract(ls.arg1), register(a0))
					(abstract(ls.arg2), register(a0))
					(abstract(ls.arg2), register(a1))
					(abstract(ls.curr), abstract(ls.iter))
					(abstract(ls.curr), abstract(ls.lhs))
					(abstract(ls.curr), abstract(ls.lhs$1))
					(abstract(ls.curr), abstract(ls.prev))
					(abstract(ls.curr), abstract(ls.rhs))
					(abstract(ls.curr), register(a2))
					(abstract(ls.iter), abstract(ls.lhs))
					(abstract(ls.iter), abstract(ls.lhs$1))
					(abstract(ls.iter), abstract(ls.prev))
					(abstract(ls.iter), abstract(ls.rhs))
					(abstract(ls.iter), abstract(ls.rhs$1))
					(abstract(ls.lhs), abstract(ls.prev))
					(abstract(ls.lhs), abstract(ls.rhs))
					(abstract(ls.lhs$1), abstract(ls.rhs$1))
					(abstract(ls.lhs$2), abstract(ls.rhs$2))
					(abstract(ls.prev), abstract(ls.rhs))
					(abstract(ls.prev), register(a1))
					(abstract(ls.prev), register(a2))
				),
				possiblyLiveLocations: register(a0) register(a1) register(a2)
			)
		)
	)
)