(
	do(
		pushFrame((allocatedByteSize: 16))
		set(cap, frame((offset: -8)), to: register(ra))
		set(s32, register(a0), to: constant(1))
		set(s32, register(a1), to: constant(1))
		call(fib)
		set(cap, register(ra), to: frame((offset: -8)))
		popFrame()
		return(to: register(ra))
	),
	procedures: (
		fib,
		in: do(
			pushFrame((allocatedByteSize: 16))
			do()
			do()
			do()
			do()
			do()
			do()
			do()
			do()
			do()
			do()
			do()
			set(cap, frame((offset: -8)), to: register(ra))
			set(s32, register(a0), to: constant(2))
			set(s32, register(a1), to: constant(29))
			createBuffer(bytes: 120, capability: register(a2), onFrame: true)
			call(recFib)
			do()
			do()
			do()
			do()
			do()
			do()
			do()
			do()
			do()
			do()
			do()
			set(cap, register(ra), to: frame((offset: -8)))
			popFrame()
			return(to: register(ra))
		)
	)
	(
		recFib,
		in: do(
			pushFrame((allocatedByteSize: 24))
			set(cap, frame((offset: -8)), to: register(s1))
			do()
			do()
			do()
			do()
			do()
			do()
			do()
			do()
			do()
			do()
			set(cap, frame((offset: -16)), to: register(ra))
			set(s32, register(a3), to: register(a0))
			set(s32, register(a5), to: register(a1))
			set(cap, register(a4), to: register(a2))
			if(
				do(
					set(s32, register(ra), to: register(a3)) set(s32, register(s1), to: register(a5)),
					then: relation(register(ra), gt, register(s1))
				),
				then: do(
					set(cap, register(s1), to: register(a4))
					set(s32, register(ra), to: register(a5))
					compute(register(ra), register(ra), sll, constant(2))
					getElement(s32, of: register(s1), offset: register(ra), to: register(a0))
					set(cap, register(s1), to: frame((offset: -8)))
					do()
					do()
					do()
					do()
					do()
					do()
					do()
					do()
					do()
					do()
					set(cap, register(ra), to: frame((offset: -16)))
					popFrame()
					return(to: register(ra))
				),
				else: do(
					set(s32, register(ra), to: register(a3))
					set(s32, register(s1), to: constant(2))
					compute(register(a0), register(ra), sub, register(s1))
					set(s32, register(ra), to: register(a3))
					set(s32, register(s1), to: constant(1))
					compute(register(a1), register(ra), sub, register(s1))
					set(s32, register(ra), to: register(a3))
					set(s32, register(s1), to: constant(1))
					compute(register(a2), register(ra), add, register(s1))
					set(cap, register(s1), to: register(a4))
					set(s32, register(ra), to: register(a0))
					compute(register(ra), register(ra), sll, constant(2))
					getElement(s32, of: register(s1), offset: register(ra), to: register(a0))
					set(cap, register(s1), to: register(a4))
					set(s32, register(ra), to: register(a1))
					compute(register(ra), register(ra), sll, constant(2))
					getElement(s32, of: register(s1), offset: register(ra), to: register(ra))
					compute(register(s1), register(a0), add, register(ra))
					set(cap, register(a0), to: register(a4))
					set(s32, register(ra), to: register(a3))
					compute(register(ra), register(ra), sll, constant(2))
					setElement(s32, of: register(a0), offset: register(ra), to: register(s1))
					set(s32, register(a0), to: register(a2))
					set(s32, register(a1), to: register(a5))
					set(cap, register(a2), to: register(a4))
					call(recFib)
					set(cap, register(s1), to: frame((offset: -8)))
					do()
					do()
					do()
					do()
					do()
					do()
					do()
					do()
					do()
					do()
					set(cap, register(ra), to: frame((offset: -16)))
					popFrame()
					return(to: register(ra))
				)
			)
		)
	)
)