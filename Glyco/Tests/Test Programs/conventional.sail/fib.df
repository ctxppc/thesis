(
	let((ls.arg, source(0)) (ls.arg$1, source(1)) (ls.arg$2, source(30)), in: evaluate(procedure(fib), ls.arg ls.arg$1 ls.arg$2)),
	functions: (
		fib,
		takes: (ls.prev, s32) (ls.curr, s32) (ls.iter, s32),
		returns: s32,
		in: if(
			let((ls.lhs, source(ls.iter)) (ls.rhs, source(1)), in: relation(ls.lhs, le, ls.rhs)),
			then: value(source(ls.curr)),
			else: let(
				(ls.arg, source(ls.curr))
				(ls.arg$1, let((ls.lhs$1, source(ls.prev)) (ls.rhs$1, source(ls.curr)), in: binary(ls.lhs$1, add, ls.rhs$1)))
				(ls.arg$2, let((ls.lhs$2, source(ls.iter)) (ls.rhs$2, source(1)), in: binary(ls.lhs$2, sub, ls.rhs$2))),
				in: evaluate(procedure(fib), ls.arg ls.arg$1 ls.arg$2)
			)
		)
	)
)