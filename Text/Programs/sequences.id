(
	do(
		pushScope()
		createBuffer(bytes: 32, capability: abstract(sequences), scoped: true)
		createBuffer(bytes: 20, capability: abstract(pi), scoped: true)
		setElement(cap, of: abstract(sequences), offset: constant(0), to: abstract(pi))
		createBuffer(bytes: 28, capability: abstract(fib), scoped: true)
		setElement(cap, of: abstract(sequences), offset: constant(16), to: abstract(fib))
		compute(abstract(sv.offset), constant(0), sll, constant(2))
		setElement(s32, of: abstract(fib), offset: abstract(sv.offset), to: constant(1))
		compute(abstract(sv.offset$1), constant(1), sll, constant(2))
		setElement(s32, of: abstract(fib), offset: abstract(sv.offset$1), to: constant(1))
		compute(abstract(sv.offset$2), constant(2), sll, constant(2))
		setElement(s32, of: abstract(fib), offset: abstract(sv.offset$2), to: constant(2))
		compute(abstract(sv.offset$3), constant(3), sll, constant(2))
		setElement(s32, of: abstract(fib), offset: abstract(sv.offset$3), to: constant(3))
		compute(abstract(sv.offset$4), constant(4), sll, constant(2))
		setElement(s32, of: abstract(fib), offset: abstract(sv.offset$4), to: constant(5))
		compute(abstract(sv.offset$5), constant(2), sll, constant(2))
		getElement(s32, of: abstract(pi), offset: abstract(sv.offset$5), to: register(a0))
		popScope()
		return(to: register(ra, cap))
	),
	procedures: 
)