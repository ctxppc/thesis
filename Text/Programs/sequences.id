(
	do(
		pushScope
		createBuffer(bytes: 32, capability: abstract(sequences), scoped: true)
		createBuffer(bytes: 20, capability: abstract(pi), scoped: true)
		setElement(cap, of: abstract(sequences), offset: 0, to: pi)
		createBuffer(bytes: 28, capability: abstract(fib), scoped: true)
		setElement(cap, of: abstract(sequences), offset: 16, to: fib)
		compute(abstract(sv.offset), 0, sll, 2)
		setElement(s32, of: abstract(fib), offset: sv.offset, to: 1)
		compute(abstract(sv.offset$1), 1, sll, 2)
		setElement(s32, of: abstract(fib), offset: sv.offset$1, to: 1)
		compute(abstract(sv.offset$2), 2, sll, 2)
		setElement(s32, of: abstract(fib), offset: sv.offset$2, to: 2)
		compute(abstract(sv.offset$3), 3, sll, 2)
		setElement(s32, of: abstract(fib), offset: sv.offset$3, to: 3)
		compute(abstract(sv.offset$4), 4, sll, 2)
		setElement(s32, of: abstract(fib), offset: sv.offset$4, to: 5)
		compute(abstract(sv.offset$5), 2, sll, 2)
		getElement(s32, of: abstract(pi), offset: sv.offset$5, to: register(a0))
		popScope
		return(to: register(ra, cap))
	),
	procedures: 
)